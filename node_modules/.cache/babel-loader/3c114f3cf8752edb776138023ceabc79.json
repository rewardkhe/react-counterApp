{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\counter1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      classname: \"num1\",\n      children: [\" \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \" Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count * count),\n      children: \" square \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count * count),\n      children: \" root \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(0),\n      disabled: count === 0,\n      children: \" reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZJ1DUDXQCjl8cZXJHS7tpc98pV8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","count","setCount"],"sources":["C:/xampp/htdocs/counter1/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction App() { \n  const [count, setCount] = useState(2);\n  return(\n\n    <div className=\"container\">\n           \n          <h2 classname=\"num1\"> {count} </h2>\n          <button onClick={() => setCount(count +1)}> Increment</button>\n          <button onClick={() => setCount(count * count)}> square </button>\n          <button onClick={() => setCount(count * count)}> root </button>\n          <button onClick={() => setCount(0)} disabled={count === 0}> reset</button>\n        </div>\n     );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;EACA,oBAEE;IAAK,SAAS,EAAC,WAAf;IAAA,wBAEM;MAAI,SAAS,EAAC,MAAd;MAAA,gBAAuBE,KAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFN,eAGM;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAE,CAAR,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHN,eAIM;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAGA,KAAT,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJN,eAKM;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAGA,KAAT,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALN,eAMM;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAAD,CAA/B;MAAoC,QAAQ,EAAED,KAAK,KAAK,CAAxD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANN;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAWD;;GAbQD,G;;KAAAA,G;AAeT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}